#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс

Функция ДобавитьВложенныйЕслиЕщеНет(Знач Коллекция, Знач ИмяРодителя, Знач Элемент,
									Знач НоваяКоллекцияПоУмолчанию) Экспорт

	ВложеннаяКоллекция = Неопределено;
	Если Не Коллекция.Свойство(ИмяРодителя, ВложеннаяКоллекция) Или ВложеннаяКоллекция = Неопределено Тогда
		ВложеннаяКоллекция = НоваяКоллекцияПоУмолчанию;
		Коллекция.Вставить(ИмяРодителя, ВложеннаяКоллекция);
	КонецЕсли;

	ВложеннаяКоллекция.Вставить(Элемент);

	Возврат ВложеннаяКоллекция;

КонецФункции

Функция МетаданныеКаталоги() Экспорт

	Результат = Новый Соответствие;
	Результат.Вставить("Catalogs", "Справочники");
	Результат.Вставить("Documents", "Документы");
	Результат.Вставить("AccountingRegisters", "РегистрыБухгалтерии");
	Результат.Вставить("AccumulationRegisters", "РегистрыНакопления");
	Результат.Вставить("InformationRegisters", "РегистрыСведений");
	Результат.Вставить("CalculationRegisters", "РегистрыРасчета");
	Результат.Вставить("BusinessProcesses", "БизнесПроцессы");
	Результат.Вставить("Tasks", "Задачи");
	Результат.Вставить("ChartsOfAccounts", "ПланыСчетов");
	Результат.Вставить("ChartsOfCalculationTypes", "ПланыВидовРасчета");
	Результат.Вставить("ChartsOfCharacteristicTypes", "ПланыВидовХарактеристик");
	Результат.Вставить("DataProcessors", "Обработки");
	Результат.Вставить("Reports", "Отчеты");
	Результат.Вставить("DocumentJournals", "ЖурналыДокументов");
	Результат.Вставить("ExchangePlans", "ПланыОбмена");
	Результат.Вставить("CommonCommands", "ОбщиеКоманды");
	Результат.Вставить("CommonForms", "ОбщиеФормы");
	Результат.Вставить("CommonModules", "ОбщиеМодули");
	Результат.Вставить("CommonTemplates", "ОбщиеМакеты");
	Результат.Вставить("Constants", "Константы");
	Результат.Вставить("ExternalDataSources", "ВнешниеИсточники");

	Результат.Вставить("FunctionalOptionsParameters", "ПараметрыФункциональныхОпций");

	// TODO добавить множественное число
	Результат.Вставить("CommandGroups", "ОбщаяГруппа");
	Результат.Вставить("CommonAttributes", "ОбщийРеквизит");
	Результат.Вставить("CommonPictures", "ОбщаяКартинка");
	Результат.Вставить("DefinedTypes", "ОпределяемыйТип");
	Результат.Вставить("DocumentNumerators", "Нумератор");
	Результат.Вставить("Enums", "Перечисление");
	Результат.Вставить("EventSubscriptions", "ПодпискаНаСобытие");
	Результат.Вставить("FilterCriteria", "КритерийОтбора");
	Результат.Вставить("FunctionalOptions", "ФункциональнаяОпция");
	Результат.Вставить("HTTPServices", "HTTPСервис");
	Результат.Вставить("Languages", "Язык");
	Результат.Вставить("Roles", "Роль");
	Результат.Вставить("ScheduledJobs", "РегламентноеЗадание");
	Результат.Вставить("Sequences", "Последовательность");
	Результат.Вставить("SessionParameters", "ПараметрСеанса");
	Результат.Вставить("SettingsStorages", "ХранилищеНастроек");
	Результат.Вставить("StyleItems", "ЭлементСтиля");
	Результат.Вставить("Subsystems", "Подсистема");
	Результат.Вставить("WebServices", "WebСервис");
	Результат.Вставить("XDTOPackages", "XDTOПакет");

	Возврат Новый ФиксированноеСоответствие(Результат);
КонецФункции

Процедура СкопироватьЭлементы(Знач Откуда, Знач Куда) Экспорт

	Для каждого КлючЗначение Из Откуда Цикл
		Куда.Добавить(КлючЗначение.Ключ);
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
